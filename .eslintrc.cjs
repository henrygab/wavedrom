module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    tsconfigRootDir: __dirname,
    project: ['./tsconfig.json'],
  },
  plugins: [
    '@typescript-eslint',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
  ],
  overrides: [
    {
      files: ['*.js'],
      rules: {
        'no-undef'                                   : 'off',
        'no-var'                                     : 'off',
        '@typescript-eslint/no-var-requires'         : 'off',
        '@typescript-eslint/no-unsafe-call'          : 'off',
        '@typescript-eslint/no-unsafe-member-access' : 'off',
        '@typescript-eslint/no-unsafe-assignment'    : 'off',
        '@typescript-eslint/no-unsafe-argument'      : 'off',
        '@typescript-eslint/restrict-plus-operands'  : 'off',
        '@typescript-eslint/no-unsafe-return'        : 'off',
      },
    },
    { // BUGBUG -- list of .ts files that have NOT been fully converted to typescript:
      files: [
        'append-save-as-dialog.ts',
        'arc-shape.ts',
        'arcs.new.ts',
        'arcs.ts',
        'assert.ts',
        'create-element.ts',
        'editor-refresh.ts',
        'eva.ts',
        'find-lane-markers.ts',
        'gen-brick.ts',
        'gen-first-wave-brick.ts',
        'gen-wave-brick.ts',
        'index.ts',
        'insert-svg-template.ts',
        'lane.ts',
        'parse-config.ts',
        'parse-wave-lane.ts',
        'parse-wave-lanes.ts',
        'process-all.ts',
        'rec.ts',
        'render-any.ts',
        'render-arcs.ts',
        'render-gaps.ts',
        'render-groups.ts',
        'render-label.ts',
        'render-lanes.ts',
        'render-marks.ts',
        'render-over-under.ts',
        'render-piece-wise.ts',
        'render-reg.ts',
        'render-signal.ts',
        'render-wave-element.ts',
        'render-wave-form.ts',
        'render-wave-lane.ts',
        'text-width.ts',
        'w3.ts',
        'wave-drom.ts',
        'wave-skin.ts',
      ],
      rules: {
        'no-undef': 'off',
        'no-var': 'off',
        '@typescript-eslint/no-var-requires'         : 'off',
        '@typescript-eslint/no-unsafe-call'          : 'off',
        '@typescript-eslint/no-unsafe-member-access' : 'off',
        '@typescript-eslint/no-unsafe-assignment'    : 'off',
        '@typescript-eslint/no-unsafe-argument'      : 'off',
        '@typescript-eslint/restrict-plus-operands'  : 'off',
        '@typescript-eslint/no-unsafe-return'        : 'off',
      },
    },
    { // BUGBUG -- list of files that are in process of being converted to typescript:
      files: [
        'this_file_does_not_exist_but_avoids_eslint_complaining_about_empty_list.ts'
      ],
      rules: {
        'no-undef': 'off',
        'no-var': 'off',
        '@typescript-eslint/no-var-requires'         : 'warn',
        '@typescript-eslint/no-unsafe-call'          : 'warn',
        '@typescript-eslint/no-unsafe-member-access' : 'warn',
        '@typescript-eslint/no-unsafe-assignment'    : 'warn',
        '@typescript-eslint/no-unsafe-argument'      : 'warn',
        '@typescript-eslint/restrict-plus-operands'  : 'warn',
        '@typescript-eslint/no-unsafe-return'        : 'warn',
      },
    },
  ],
};